Project File Structure:
./
    .gitignore
    add_recipes.py
    app.py
    config.py
    models.py
    project_structure.txt
    __init__.py
    instance/
        recipes.db
    templates/
        index.html
        search.html
        search_results.html

Contents of .py and .html Files:

File: .\add_recipes.py

import random
from app import app
from models import Recipe, Ingredient, RecipeStep
from config import db

# Pools of sample data
recipe_names = ["Spaghetti Bolognese", "Chicken Curry", "Vegetable Stir Fry", "Beef Stew", "Tomato Soup", "Caesar Salad", "Grilled Cheese Sandwich", "Pepperoni Pizza", "Pancakes", "Fish Tacos"]
ingredients_pool = [
    {"name": "spaghetti", "amount": "200g"},
    {"name": "chicken", "amount": "200g"},
    {"name": "carrots", "amount": "100g"},
    {"name": "tomatoes", "amount": "150g"},
    {"name": "lettuce", "amount": "50g"},
    {"name": "cheese", "amount": "100g"},
    {"name": "pepperoni", "amount": "70g"},
    {"name": "flour", "amount": "200g"},
    {"name": "fish", "amount": "150g"},
    {"name": "tortilla", "amount": "2 pieces"}
]
steps_pool = [
    "Boil water",
    "Fry on pan",
    "Bake in oven",
    "Mix ingredients",
    "Chop vegetables",
    "Grill on barbecue",
    "Marinate overnight",
    "Simmer on low heat",
    "Whisk together",
    "Serve with sauce"
]

def add_sample_recipes(n):
    for _ in range(n):
        name = random.choice(recipe_names)
        ingredients = [Ingredient(name=ingredient["name"], amount=ingredient["amount"]) for ingredient in random.sample(ingredients_pool, 3)]
        steps = [RecipeStep(step=step) for step in random.sample(steps_pool, 3)]

        recipe = Recipe(name=name, type="dinner", ingredients=ingredients, steps=steps)
        db.session.add(recipe)

    db.session.commit()

with app.app_context():
    add_sample_recipes(10)  # Specify number of recipes to add



File: .\app.py

from flask import render_template, request
from config import app, db
from models import Recipe, Ingredient

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/search', methods=['GET', 'POST'])
def search():
    if request.method == 'POST':
        ingredients = request.form.getlist('ingredient')
        # Query for recipes containing all ingredients
        recipes = Recipe.query.join(Recipe.ingredients).filter(Ingredient.name.in_(ingredients)).group_by(Recipe.id).having(db.func.count(Recipe.id) == len(ingredients)).all()
        return render_template('search_results.html', recipes=recipes, ingredients=ingredients)
    return render_template('search.html')

if __name__ == '__main__':
    app.run(debug=True)


File: .\config.py

from flask import Flask
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///recipes.db'
db = SQLAlchemy(app)


File: .\models.py

from config import db

class Recipe(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    type = db.Column(db.String(50))
    ingredients = db.relationship('Ingredient', backref='recipe', lazy=True)
    steps = db.relationship('RecipeStep', backref='recipe', lazy=True)

class Ingredient(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    amount = db.Column(db.String(50))
    recipe_id = db.Column(db.Integer, db.ForeignKey('recipe.id'), nullable=False)

class RecipeStep(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    step = db.Column(db.Text, nullable=False)
    recipe_id = db.Column(db.Integer, db.ForeignKey('recipe.id'), nullable=False)



File: .\__init__.py

from app import app
from models import db

with app.app_context():
    db.create_all()


File: .\templates\index.html

<!DOCTYPE html>
<html>
<head>
    <title>Recipe Matcher</title>
</head>
<body>
    <h1>Welcome to Recipe Matcher</h1>
    <a href="/search">Search Recipes</a>
</body>
</html>


File: .\templates\search.html

<!DOCTYPE html>
<html>
<head>
    <title>Recipe Search</title>
</head>
<body>
    <h1>Recipe Search</h1>
    <form action="/search" method="post">
        <label for="ingredient">Ingredient:</label>
        <input type="text" id="ingredient" name="ingredient">
        <input type="submit" value="Search">
    </form>
</body>
</html>


File: .\templates\search_results.html

<!DOCTYPE html>
<html>
<head>
    <title>Search Results</title>
</head>
<body>
    <h1>Search Results</h1>
    {% if recipes %}
        <ul>
            {% for recipe in recipes %}
                <li>{{ recipe.name }} - Ingredients:
                    {% for ingredient in recipe.ingredients %}
                        {{ ingredient.name }} ({{ ingredient.amount }}),
                    {% endfor %}
                    - Steps:
                    {% for step in recipe.steps %}
                        {{ step.step }};
                    {% endfor %}
                </li>
            {% endfor %}
        </ul>
    {% else %}
        <p>No recipes found.</p>
    {% endif %}
    <a href="/">Back to search</a>
</body>
</html>

